[mysqld_safe]
open-files-limit = 8192

[mysqld]
default_authentication_plugin= mysql_native_password
max_heap_table_size = 32M
tmp_table_size = 32M

# CL-14699 mitigate privilege escalation bug CVE-2016-6663
symbolic-links             = FALSE

# Default character set and collation
character-set-server       = utf8
collation-server           = utf8_general_ci

# Generic
key_buffer_size            = 20M             # MyISAM index cache, typically only used for MySQL system tables
table_open_cache           = 2500            # Table cache for file handles, etc.
thread_cache_size          = 200
max_allowed_packet         = 100M
max_connect_errors         = 9999999
default_storage_engine     = INNODB          # Set the default storage engine to InnoDB

# Query cache
#query_cache_type           = ON              # Query cache type (ON/OFF)
#query_cache_size           = 40M             # Total query cache size
#query_cache_limit          = 5M              # Max result set size allowed in query cache
#query_cache_min_res_unit   = 1024            # Minimum amount of memory that can be allocated in query cache
#query_cache_strip_comments = on              # Percona: Strip out query comments because we put HTTP Request IDs #into queries

# Time outs
wait_timeout               = 600             # Time out waiting for a new query. Set to 600 because we time out php at 600s
net_write_timeout          = 600             # Seconds to wait for a block to be written to a connection. See wait_timeout.
interactive_timeout        = 600             # The number of seconds the server waits for activity on an interactive connection before closing it. See wait_timeout.

# Slow query log
slow_query_log             = 1               # Turn on the slow query log
long_query_time            = 1               # Log any query that takes longer than 1 second in the slow query log
log_queries_not_using_indexes = 0            # Do not log queries faster than 1 second that are not using an index
# OPE-516 percona extra slow log features
# https://www.percona.com/doc/percona-server/5.5/diagnostics/slow_extended_55.html#log_slow_verbosity
#log_slow_verbosity         = full

# Per thread buffers
join_buffer_size           = 512K            # Per-thread, per-join pre-assigned buffer
read_buffer_size           = 512K            # Per-thread buffer for caching nested query results
read_rnd_buffer_size       = 512K            # Per-thread buffer for MyISAM table scans
sort_buffer_size           = 512K            # Per-thread buffer for sorting


# Set InnoDB thread concurrency to unlimited in 5.5.41 so slow queries don't become blocking
innodb_thread_concurrency  = 0


# To compute max connections, we take mysqld's total percentage of memory
# (40% on this Apache+MySQL server) and subtract all static buffers (key,
# query cache, log, and InnoDB). We then divide that by the dynamic buffers
# (in our case they are all 512k so we do 4x512k).
# Since most database connections tend to be sleeping connections we can add
# a safe number (150) to this baseline to avoid running out of connections
# prematurely and causing a failover.
#
# On a t1.micro with 615 MB, this computes that we can have -4
# max_connections... which is a bit of a problem. For now, set an arbitrary
# minimum of 4. More tuning is warranted.
max_connections            = 1623

# TIMESTAMPS have nonstandard behavior for defaults that is deprecated. For
# backwards compatibility, maintain that behavior. In a future version of MySQL,
# this option and the "nonstandard behavior" will be removed.
# See http://dev.mysql.com/doc/refman/5.6/en/server-system-variables.html#sysvar_explicit_defaults_for_timestamp
explicit_defaults_for_timestamp = OFF

#####################
# INNODB Settings
#####################

# Save and restore buffer pool state.
innodb_buffer_pool_dump_at_shutdown = ON
innodb_buffer_pool_load_at_startup = ON
# End of Percona specific optimizations

# Latest InnoDB file format that allows for table compression
#innodb_file_format         = Barracuda
# Allow large index prefixes to support utf8mb4 better (CL-13749)
#innodb_large_prefix = 1

# ibdata1 table space settings
#innodb_data_file_path      = ibdata1:10M:autoextend
# InnoDB redo log file size
#innodb_log_file_size       = 200M
# Number of InnoDB redo log files
#innodb_log_files_in_group  = 3
# The size of the buffer InnoDB uses to write to the redo log files
#innodb_log_buffer_size     = 8M

# Turn on query response time logging
#query_response_time_stats  = ON
# For Percona 5.6+, response time logging requires this plugin:
#plugin-load-add = 'query_response_time.so'

# innodb_flush_log_at_trx_commit:
#  0: Log buffer is written out to the log file once per second and the flush
#     to disk operation is performed on the log file, but nothing is done at a
#     transaction commit (fastest).
#  1: (default) Log buffer is written out to the log file at each transaction
#     commit and the flush to disk operation is performed on the log file
#     (slowest).
#  2: Log buffer is written out to the file at each commit, but the flush to
#     disk operation is not performed on it. However, the flushing on the log
#     file takes place once per second also when the value is 2. Note that the
#     once-per-second flushing is not 100% guaranteed to happen every second,
#     due to process scheduling issues (2nd fastest).
# Currently we're optimized for performance so we're using 0 which means no
# durability.

#innodb_flush_log_at_trx_commit = 0


# Store each table space in a separate file
#innodb_file_per_table = 1


# Do not generate InnoDB index statistics for each table every time the information
# schema is queried
#innodb_stats_on_metadata   = OFF

[isamchk]
key_buffer                 = 16M